
package us.kbase.inferelator;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * <p>Original spec-file type: CmonkeyRunResult</p>
 * <pre>
 * Represents data from a single run of cMonkey
 * string id - identifier of cMonkey run
 * string start_time - start time of cMonkey run
 * string finish_time - end time of cMonkey run
 * int iterations_number - number of iterations
 * int last_iteration - last iteration
 * string organism - organism
 * int rows_number - number of rows
 * int columns_number - number of columns
 * int clusters_number - number of clusters
 * CmonkeyRunParameters parameters - run parameters
 * CmonkeyNetwork network;
 * </pre>
 * 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
    "id",
    "start_time",
    "finish_time",
    "iterations_number",
    "last_iteration",
    "organism",
    "rows_number",
    "columns_number",
    "clusters_number",
    "parameters",
    "network"
})
public class CmonkeyRunResult {

    @JsonProperty("id")
    private String id;
    @JsonProperty("start_time")
    private String startTime;
    @JsonProperty("finish_time")
    private String finishTime;
    @JsonProperty("iterations_number")
    private Long iterationsNumber;
    @JsonProperty("last_iteration")
    private Long lastIteration;
    @JsonProperty("organism")
    private String organism;
    @JsonProperty("rows_number")
    private Long rowsNumber;
    @JsonProperty("columns_number")
    private Long columnsNumber;
    @JsonProperty("clusters_number")
    private Long clustersNumber;
    /**
     * <p>Original spec-file type: CmonkeyRunParameters</p>
     * <pre>
     * Contains parameters of a cMonkey run
     * int no_operons = <0|1> - if 1, MicrobesOnline operons data will not be used
     * int no_string = <0|1> - if 1, STRING data will not be used
     * int no_networks = <0|1> - if 1, Network scoring will not be used
     * int no_motifs = <0|1> - if 1, Motif scoring will not be used
     * </pre>
     * 
     */
    @JsonProperty("parameters")
    private CmonkeyRunParameters parameters;
    /**
     * <p>Original spec-file type: CmonkeyNetwork</p>
     * <pre>
     * Represents network generated by a single run of cMonkey
     * string id - identifier of cMonkey-generated network
     * int iteration - number of the last iteration
     * list<CmonkeyCluster> clusters - list of biclusters
     * </pre>
     * 
     */
    @JsonProperty("network")
    private CmonkeyNetwork network;
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("id")
    public void setId(String id) {
        this.id = id;
    }

    public CmonkeyRunResult withId(String id) {
        this.id = id;
        return this;
    }

    @JsonProperty("start_time")
    public String getStartTime() {
        return startTime;
    }

    @JsonProperty("start_time")
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    public CmonkeyRunResult withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    @JsonProperty("finish_time")
    public String getFinishTime() {
        return finishTime;
    }

    @JsonProperty("finish_time")
    public void setFinishTime(String finishTime) {
        this.finishTime = finishTime;
    }

    public CmonkeyRunResult withFinishTime(String finishTime) {
        this.finishTime = finishTime;
        return this;
    }

    @JsonProperty("iterations_number")
    public Long getIterationsNumber() {
        return iterationsNumber;
    }

    @JsonProperty("iterations_number")
    public void setIterationsNumber(Long iterationsNumber) {
        this.iterationsNumber = iterationsNumber;
    }

    public CmonkeyRunResult withIterationsNumber(Long iterationsNumber) {
        this.iterationsNumber = iterationsNumber;
        return this;
    }

    @JsonProperty("last_iteration")
    public Long getLastIteration() {
        return lastIteration;
    }

    @JsonProperty("last_iteration")
    public void setLastIteration(Long lastIteration) {
        this.lastIteration = lastIteration;
    }

    public CmonkeyRunResult withLastIteration(Long lastIteration) {
        this.lastIteration = lastIteration;
        return this;
    }

    @JsonProperty("organism")
    public String getOrganism() {
        return organism;
    }

    @JsonProperty("organism")
    public void setOrganism(String organism) {
        this.organism = organism;
    }

    public CmonkeyRunResult withOrganism(String organism) {
        this.organism = organism;
        return this;
    }

    @JsonProperty("rows_number")
    public Long getRowsNumber() {
        return rowsNumber;
    }

    @JsonProperty("rows_number")
    public void setRowsNumber(Long rowsNumber) {
        this.rowsNumber = rowsNumber;
    }

    public CmonkeyRunResult withRowsNumber(Long rowsNumber) {
        this.rowsNumber = rowsNumber;
        return this;
    }

    @JsonProperty("columns_number")
    public Long getColumnsNumber() {
        return columnsNumber;
    }

    @JsonProperty("columns_number")
    public void setColumnsNumber(Long columnsNumber) {
        this.columnsNumber = columnsNumber;
    }

    public CmonkeyRunResult withColumnsNumber(Long columnsNumber) {
        this.columnsNumber = columnsNumber;
        return this;
    }

    @JsonProperty("clusters_number")
    public Long getClustersNumber() {
        return clustersNumber;
    }

    @JsonProperty("clusters_number")
    public void setClustersNumber(Long clustersNumber) {
        this.clustersNumber = clustersNumber;
    }

    public CmonkeyRunResult withClustersNumber(Long clustersNumber) {
        this.clustersNumber = clustersNumber;
        return this;
    }

    /**
     * <p>Original spec-file type: CmonkeyRunParameters</p>
     * <pre>
     * Contains parameters of a cMonkey run
     * int no_operons = <0|1> - if 1, MicrobesOnline operons data will not be used
     * int no_string = <0|1> - if 1, STRING data will not be used
     * int no_networks = <0|1> - if 1, Network scoring will not be used
     * int no_motifs = <0|1> - if 1, Motif scoring will not be used
     * </pre>
     * 
     */
    @JsonProperty("parameters")
    public CmonkeyRunParameters getParameters() {
        return parameters;
    }

    /**
     * <p>Original spec-file type: CmonkeyRunParameters</p>
     * <pre>
     * Contains parameters of a cMonkey run
     * int no_operons = <0|1> - if 1, MicrobesOnline operons data will not be used
     * int no_string = <0|1> - if 1, STRING data will not be used
     * int no_networks = <0|1> - if 1, Network scoring will not be used
     * int no_motifs = <0|1> - if 1, Motif scoring will not be used
     * </pre>
     * 
     */
    @JsonProperty("parameters")
    public void setParameters(CmonkeyRunParameters parameters) {
        this.parameters = parameters;
    }

    public CmonkeyRunResult withParameters(CmonkeyRunParameters parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * <p>Original spec-file type: CmonkeyNetwork</p>
     * <pre>
     * Represents network generated by a single run of cMonkey
     * string id - identifier of cMonkey-generated network
     * int iteration - number of the last iteration
     * list<CmonkeyCluster> clusters - list of biclusters
     * </pre>
     * 
     */
    @JsonProperty("network")
    public CmonkeyNetwork getNetwork() {
        return network;
    }

    /**
     * <p>Original spec-file type: CmonkeyNetwork</p>
     * <pre>
     * Represents network generated by a single run of cMonkey
     * string id - identifier of cMonkey-generated network
     * int iteration - number of the last iteration
     * list<CmonkeyCluster> clusters - list of biclusters
     * </pre>
     * 
     */
    @JsonProperty("network")
    public void setNetwork(CmonkeyNetwork network) {
        this.network = network;
    }

    public CmonkeyRunResult withNetwork(CmonkeyNetwork network) {
        this.network = network;
        return this;
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperties(String name, Object value) {
        this.additionalProperties.put(name, value);
    }

    @Override
    public String toString() {
        return ((((((((((((((((((((((((("CmonkeyRunResult"+" [id=")+ id)+", startTime=")+ startTime)+", finishTime=")+ finishTime)+", iterationsNumber=")+ iterationsNumber)+", lastIteration=")+ lastIteration)+", organism=")+ organism)+", rowsNumber=")+ rowsNumber)+", columnsNumber=")+ columnsNumber)+", clustersNumber=")+ clustersNumber)+", parameters=")+ parameters)+", network=")+ network)+", additionalProperties=")+ additionalProperties)+"]");
    }

}
