
package us.kbase.cmonkey;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * <p>Original spec-file type: CmonkeyCluster</p>
 * <pre>
 * Represents bicluster generated by cMonkey
 * string id - identifier of bicluster
 * float residual - residual
 * list<expression_sample_ws_id> sample_ws_ids - list of experimental conditions 
 * list<gene_id> gene_ids - list of genes from bicluster
 * list<CmonkeyMotif> motifs - list of motifs identified for the bicluster, converted to MEME format
 * @optional motifs
 * </pre>
 * 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
    "id",
    "residual",
    "sample_ws_ids",
    "gene_ids",
    "motifs"
})
public class CmonkeyCluster {

    @JsonProperty("id")
    private java.lang.String id;
    @JsonProperty("residual")
    private Double residual;
    @JsonProperty("sample_ws_ids")
    private List<String> sampleWsIds;
    @JsonProperty("gene_ids")
    private List<String> geneIds;
    @JsonProperty("motifs")
    private List<CmonkeyMotif> motifs;
    private Map<java.lang.String, Object> additionalProperties = new HashMap<java.lang.String, Object>();

    @JsonProperty("id")
    public java.lang.String getId() {
        return id;
    }

    @JsonProperty("id")
    public void setId(java.lang.String id) {
        this.id = id;
    }

    public CmonkeyCluster withId(java.lang.String id) {
        this.id = id;
        return this;
    }

    @JsonProperty("residual")
    public Double getResidual() {
        return residual;
    }

    @JsonProperty("residual")
    public void setResidual(Double residual) {
        this.residual = residual;
    }

    public CmonkeyCluster withResidual(Double residual) {
        this.residual = residual;
        return this;
    }

    @JsonProperty("sample_ws_ids")
    public List<String> getSampleWsIds() {
        return sampleWsIds;
    }

    @JsonProperty("sample_ws_ids")
    public void setSampleWsIds(List<String> sampleWsIds) {
        this.sampleWsIds = sampleWsIds;
    }

    public CmonkeyCluster withSampleWsIds(List<String> sampleWsIds) {
        this.sampleWsIds = sampleWsIds;
        return this;
    }

    @JsonProperty("gene_ids")
    public List<String> getGeneIds() {
        return geneIds;
    }

    @JsonProperty("gene_ids")
    public void setGeneIds(List<String> geneIds) {
        this.geneIds = geneIds;
    }

    public CmonkeyCluster withGeneIds(List<String> geneIds) {
        this.geneIds = geneIds;
        return this;
    }

    @JsonProperty("motifs")
    public List<CmonkeyMotif> getMotifs() {
        return motifs;
    }

    @JsonProperty("motifs")
    public void setMotifs(List<CmonkeyMotif> motifs) {
        this.motifs = motifs;
    }

    public CmonkeyCluster withMotifs(List<CmonkeyMotif> motifs) {
        this.motifs = motifs;
        return this;
    }

    @JsonAnyGetter
    public Map<java.lang.String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperties(java.lang.String name, Object value) {
        this.additionalProperties.put(name, value);
    }

    @Override
    public java.lang.String toString() {
        return ((((((((((((("CmonkeyCluster"+" [id=")+ id)+", residual=")+ residual)+", sampleWsIds=")+ sampleWsIds)+", geneIds=")+ geneIds)+", motifs=")+ motifs)+", additionalProperties=")+ additionalProperties)+"]");
    }

}
